- @angularForm = true

.form-horizontal{:id => "start_form_div", :style => "display:none"}
  %form#form_div{"name"            => "angularForm",
                 "ng-controller"   => "cloudVolumeFormController",
                 "ng-show"         => "afterGet",
                 "form-fields-url" => "/#{controller_name}/cloud_volume_form_fields/",
                 "create-url"      => "/#{controller_name}/create/",
                 "update-url"      => "/#{controller_name}/update/",
                 "novalidate"      => true}
    = render :partial => "layouts/flash_msg"

    %div
      %div
        .form-group{"ng-class" => "{'has-error': angularForm.name.$invalid}"}
          %label.col-md-2.control-label{"for" => "textInput-markup"}
            = _("Name")
          .col-md-8
            %input.form-control{"type"           => "text",
                                "id"             => "textInput-markup",
                                "name"           => "name",
                                "ng-model"       => "cloudVolumeModel.name",
                                "maxlength"      => "#{MAX_NAME_LEN}",
                                "miqrequired"    => "",
                                "checkchange"    => "",
                                "auto-focus"     => "",
                                "start-form-div" => "start_form_div"}
            %span.help-block{"ng-show" => "angularForm.name.$error.miqrequired"}
              = _("Required")
        -# .form-group{"ng-class" => "{'has-error': angularForm.hostname.$invalid}"}
        -#   %label.col-md-2.control-label{"for" => "textInput-markup"}
        -#     = _("Hostname (or IPv4 or IPv6 address)")
        -#   .col-md-8
        -#     %input.form-control{"type"        => "text",
        -#                         "id"          => "textInput-markup",
        -#                         "name"        => "hostname",
        -#                         "ng-model"    => "hostModel.hostname",
        -#                         "maxlength"   => "#{MAX_HOSTNAME_LEN}",
        -#                         "miqrequired" => "",
        -#                         "checkchange" => ""}
        -#     %span.help-block{"ng-show" => "angularForm.hostname.$error.miqrequired"}
        -#       = _("Required")
        -# .form-group{"ng-class" => "{'has-error': angularForm.user_assigned_os.$invalid}", "ng-hide" => "hostModel.operating_system"}
        -#   %label.col-md-2.control-label
        -#     = _("Host platform")
        -#   .col-md-8
        -#     = select_tag('user_assigned_os',
        -#                  options_for_select([["<#{_('Choose')}>", nil]] + Host.host_create_os_types.to_a, disabled: ["<#{_('Choose')}>", nil]),
        -#                  "ng-model"                    => "hostModel.user_assigned_os",
        -#                  "checkchange"                 => "",
        -#                  "ng-required"                 => "!hostModel.operating_system",
        -#                  "selectpicker-for-select-tag" => "")
        -#     %span.help-block{"ng-show" => "angularForm.user_assigned_os.$error.required"}
        -#       = _("Required")
        -# .form-group
        -#   %label.col-md-2.control-label
        -#     = _("Custom Identifier")
        -#   .col-md-8
        -#     %input#custom_1.form-control{"type"        => "text",
        -#                                  "name"        => "custom_1",
        -#                                  "ng-model"    => "hostModel.custom_1",
        -#                                  "maxlength"   => 50,
        -#                                  "checkchange" => ""}
        -# .form-group{"ng-class" => "{'has-error': angularForm.ipmi_address.$error.requiredDependsOn}"}
        -#   %label.col-md-2.control-label{"for" => "textInput-markup"}
        -#     = _("IPMI IP Address")
        -#   .col-md-8
        -#     %input.form-control#ipmi_address{"type"                => "text",
        -#                                      "name"                => "ipmi_address",
        -#                                      "ng-model"            => "hostModel.ipmi_address",
        -#                                      "required-depends-on" => "hostModel.ipmi_userid",
        -#                                      "required-if-exists"  => "ipmi_userid",
        -#                                      "maxlength"           => 15,
        -#                                      "checkchange"         => ""}
        -#     %span.help-block{"ng-show" => "angularForm.ipmi_address.$error.requiredDependsOn"}
        -#       = _("Required")
        -# .form-group
        -#   %label.col-md-2.control-label
        -#     = _("MAC Address")
        -#   .col-md-8
        -#     %input#mac_address.form-control{"type"        => "text",
        -#                                     "name"        => "mac_address",
        -#                                     "ng-model"    => "hostModel.mac_address",
        -#                                     "maxlength"   => "#{MAX_NAME_LEN}",
        -#                                     "checkchange" => ""}
  %hr
  = render(:partial => "/layouts/angular/multi_auth_credentials",
           :locals  => {:record => @volume, :ng_model => "cloudVolumeModel"})
  = render :partial => "layouts/angular/x_edit_buttons_angular"

:javascript
  ManageIQ.angularApplication.value('cloudVolumeFormId', '#{@volume.id || "new"}');
  angular.bootstrap(jQuery('#form_div'), ['ManageIQ.angularApplication'], { strictDi: true });
